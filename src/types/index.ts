

export interface LocationRevenueInput {
  la72: string; // Input as string for form handling
  elCubo: string;
  parqueDeLasLuces: string;
  la78: string;
}

export interface LocationRevenue {
  la72: number;
  elCubo: number;
  parqueDeLasLuces: number;
  la78: number;
}

export interface RevenueEntry {
  id: string; // YYYY-MM-DD
  date: string; // YYYY-MM-DD
  revenues: LocationRevenue;
}

export interface DailyTotal {
  date: string;
  total: number;
  memberShare: number; // This might represent gross daily member share if needed directly
  locationTotals: LocationRevenue;
}

export interface DeductionsDetail {
  zonaSegura: number;
  arriendo: number;
  aporteCooperativa: number;
  totalDeductions: number;
}

export type GroupId = 'grupoCubo' | 'grupoLuces' | 'grupo78' | 'grupo72';

export interface GroupRevenue {
  grupoCubo: number;
  grupoLuces: number;
  grupo78: number;
  grupo72: number;
}


export interface AggregatedTotal {
  period: string; // e.g., "Week of YYYY-MM-DD", "Month of YYYY-MM"
  totalRevenueInPeriod: number; // Total revenue generated by the business in this period
  grossMemberShare: number; // totalRevenueInPeriod / NUMBER_OF_MEMBERS
  deductionsDetail: DeductionsDetail; // Details of fixed business costs for the period
  netRevenueToDistribute: number; // totalRevenueInPeriod - deductionsDetail.totalDeductions
  netMemberShare: number; // finalNetProfit / NUMBER_OF_MEMBERS
  groupRevenueTotals: GroupRevenue; // Total revenue generated by each group in this period
  entries: RevenueEntry[];
}

export interface Expense {
  id: string; // Unique identifier (e.g., timestamp or UUID)
  date: string; // YYYY-MM-DD
  description: string;
  amount: number;
  categoryId: string; // e.g., 'reparacion', 'repuestos'
}
